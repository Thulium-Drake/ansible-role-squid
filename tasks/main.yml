---
- name: 'Include OS specific vars'
  include_vars: "{{ ansible_facts['os_family'] }}.yml"
  no_log: true

- name: 'Install squid'
  package:
    name: "{{ squid_pkg }}"
    state: 'present'
    update_cache: true

- name: 'Open firewall port for squid'
  ansible.posix.firewalld:
    port: "{{ squid_port }}/tcp"
    permanent: true
    immediate: true
    state: 'enabled'
  when: ansible_facts['os_family'] == 'RedHat'

- name: 'Ensure that /etc/squid/conf.d folder exists'
  file:
    path: '/etc/squid/conf.d/'
    owner: 'root'
    group: 'root'
    mode: 0755
    state: 'directory'

- name: 'Ensure allow and blocklists'
  copy:
    dest: "/etc/squid/{{ item['name'] }}.acl"
    content: |
      # Managed by Ansible, your changes will be lost!
      {% for line in item['content'] %}
      {{ line }}
      {% endfor %}
    mode: 0444
  loop:
    - name: 'allowlist'
      content: "{{ squid_allowed_domains }}"
    - name: 'blocklist'
      content: "{{ squid_blocked_domains }}"
    - name: 'allowed_hosts'
      content: "{{ squid_allowed_hosts }}"
    - name: 'blocked_hosts'
      content: "{{ squid_blocked_hosts }}"

- name: 'Update custom squid configurations'
  template:
    src: 'template.conf.j2'
    dest: '/etc/squid/conf.d/{{ item['name'] }}.conf'
    owner: 'root'
    group: 'root'
    mode: 0644
  notify: restart squid
  loop: "{{ squid_custom_config }}"
  when: squid_custom_config is defined

- name: 'Check if squid sub-modules are present'
  find:
    paths: '/etc/squid/conf.d/'
    patterns: '*.conf'
  register: find

- name: 'Ensure there is at least 1 sub-module present'
  file:
    path: '/etc/squid/conf.d/default.conf'
    owner: 'root'
    group: 'root'
    mode: 0644
    state: 'touch'
  when: find.matched == 0

- name: 'Update squid config/acls'
  template:
    src: 'squid.conf.j2'
    dest: '/etc/squid/squid.conf'
    owner: 'root'
    group: 'root'
    mode: 0644
  notify: restart squid
